/**
 * generated by Xtext 2.9.0
 */
package org.xtext.example.mydsl.calculatrice.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.calculatrice.CalculatricePackage;
import org.xtext.example.mydsl.calculatrice.VarCall;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Var Call</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.calculatrice.impl.VarCallImpl#getVarCall <em>Var Call</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VarCallImpl extends CalcExprImpl implements VarCall
{
  /**
   * The default value of the '{@link #getVarCall() <em>Var Call</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarCall()
   * @generated
   * @ordered
   */
  protected static final String VAR_CALL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVarCall() <em>Var Call</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarCall()
   * @generated
   * @ordered
   */
  protected String varCall = VAR_CALL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VarCallImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CalculatricePackage.Literals.VAR_CALL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getVarCall()
  {
    return varCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVarCall(String newVarCall)
  {
    String oldVarCall = varCall;
    varCall = newVarCall;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CalculatricePackage.VAR_CALL__VAR_CALL, oldVarCall, varCall));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CalculatricePackage.VAR_CALL__VAR_CALL:
        return getVarCall();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CalculatricePackage.VAR_CALL__VAR_CALL:
        setVarCall((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CalculatricePackage.VAR_CALL__VAR_CALL:
        setVarCall(VAR_CALL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CalculatricePackage.VAR_CALL__VAR_CALL:
        return VAR_CALL_EDEFAULT == null ? varCall != null : !VAR_CALL_EDEFAULT.equals(varCall);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (varCall: ");
    result.append(varCall);
    result.append(')');
    return result.toString();
  }

} //VarCallImpl
