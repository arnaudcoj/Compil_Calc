/**
 * generated by Xtext 2.9.0
 */
package org.xtext.example.mydsl.calculatrice.impl;

import java.lang.Boolean;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.calculatrice.BoolExpr;
import org.xtext.example.mydsl.calculatrice.Calc;
import org.xtext.example.mydsl.calculatrice.CalcExpr;
import org.xtext.example.mydsl.calculatrice.CalculatricePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Calc</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.calculatrice.impl.CalcImpl#getBoolName <em>Bool Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.calculatrice.impl.CalcImpl#getB <em>B</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.calculatrice.impl.CalcImpl#isDecl <em>Decl</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.calculatrice.impl.CalcImpl#getVarName <em>Var Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.calculatrice.impl.CalcImpl#getE <em>E</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CalcImpl extends MinimalEObjectImpl.Container implements Calc
{
  /**
   * The default value of the '{@link #getBoolName() <em>Bool Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoolName()
   * @generated
   * @ordered
   */
  protected static final String BOOL_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBoolName() <em>Bool Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoolName()
   * @generated
   * @ordered
   */
  protected String boolName = BOOL_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getB() <em>B</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getB()
   * @generated
   * @ordered
   */
  protected BoolExpr b;

  /**
   * The default value of the '{@link #isDecl() <em>Decl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDecl()
   * @generated
   * @ordered
   */
  protected static final boolean DECL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDecl() <em>Decl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDecl()
   * @generated
   * @ordered
   */
  protected boolean decl = DECL_EDEFAULT;

  /**
   * The default value of the '{@link #getVarName() <em>Var Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarName()
   * @generated
   * @ordered
   */
  protected static final String VAR_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVarName() <em>Var Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarName()
   * @generated
   * @ordered
   */
  protected String varName = VAR_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getE() <em>E</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getE()
   * @generated
   * @ordered
   */
  protected CalcExpr e;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CalcImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CalculatricePackage.Literals.CALC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBoolName()
  {
    return boolName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBoolName(String newBoolName)
  {
    String oldBoolName = boolName;
    boolName = newBoolName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CalculatricePackage.CALC__BOOL_NAME, oldBoolName, boolName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BoolExpr getB()
  {
    return b;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetB(BoolExpr newB, NotificationChain msgs)
  {
    BoolExpr oldB = b;
    b = newB;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CalculatricePackage.CALC__B, oldB, newB);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setB(BoolExpr newB)
  {
    if (newB != b)
    {
      NotificationChain msgs = null;
      if (b != null)
        msgs = ((InternalEObject)b).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CalculatricePackage.CALC__B, null, msgs);
      if (newB != null)
        msgs = ((InternalEObject)newB).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CalculatricePackage.CALC__B, null, msgs);
      msgs = basicSetB(newB, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CalculatricePackage.CALC__B, newB, newB));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isDecl()
  {
    return decl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDecl(boolean newDecl)
  {
    boolean oldDecl = decl;
    decl = newDecl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CalculatricePackage.CALC__DECL, oldDecl, decl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getVarName()
  {
    return varName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVarName(String newVarName)
  {
    String oldVarName = varName;
    varName = newVarName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CalculatricePackage.CALC__VAR_NAME, oldVarName, varName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CalcExpr getE()
  {
    return e;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetE(CalcExpr newE, NotificationChain msgs)
  {
    CalcExpr oldE = e;
    e = newE;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CalculatricePackage.CALC__E, oldE, newE);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setE(CalcExpr newE)
  {
    if (newE != e)
    {
      NotificationChain msgs = null;
      if (e != null)
        msgs = ((InternalEObject)e).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CalculatricePackage.CALC__E, null, msgs);
      if (newE != null)
        msgs = ((InternalEObject)newE).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CalculatricePackage.CALC__E, null, msgs);
      msgs = basicSetE(newE, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CalculatricePackage.CALC__E, newE, newE));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CalculatricePackage.CALC__B:
        return basicSetB(null, msgs);
      case CalculatricePackage.CALC__E:
        return basicSetE(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CalculatricePackage.CALC__BOOL_NAME:
        return getBoolName();
      case CalculatricePackage.CALC__B:
        return getB();
      case CalculatricePackage.CALC__DECL:
        return isDecl();
      case CalculatricePackage.CALC__VAR_NAME:
        return getVarName();
      case CalculatricePackage.CALC__E:
        return getE();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CalculatricePackage.CALC__BOOL_NAME:
        setBoolName((String)newValue);
        return;
      case CalculatricePackage.CALC__B:
        setB((BoolExpr)newValue);
        return;
      case CalculatricePackage.CALC__DECL:
        setDecl((Boolean)newValue);
        return;
      case CalculatricePackage.CALC__VAR_NAME:
        setVarName((String)newValue);
        return;
      case CalculatricePackage.CALC__E:
        setE((CalcExpr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CalculatricePackage.CALC__BOOL_NAME:
        setBoolName(BOOL_NAME_EDEFAULT);
        return;
      case CalculatricePackage.CALC__B:
        setB((BoolExpr)null);
        return;
      case CalculatricePackage.CALC__DECL:
        setDecl(DECL_EDEFAULT);
        return;
      case CalculatricePackage.CALC__VAR_NAME:
        setVarName(VAR_NAME_EDEFAULT);
        return;
      case CalculatricePackage.CALC__E:
        setE((CalcExpr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CalculatricePackage.CALC__BOOL_NAME:
        return BOOL_NAME_EDEFAULT == null ? boolName != null : !BOOL_NAME_EDEFAULT.equals(boolName);
      case CalculatricePackage.CALC__B:
        return b != null;
      case CalculatricePackage.CALC__DECL:
        return decl != DECL_EDEFAULT;
      case CalculatricePackage.CALC__VAR_NAME:
        return VAR_NAME_EDEFAULT == null ? varName != null : !VAR_NAME_EDEFAULT.equals(varName);
      case CalculatricePackage.CALC__E:
        return e != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (boolName: ");
    result.append(boolName);
    result.append(", decl: ");
    result.append(decl);
    result.append(", varName: ");
    result.append(varName);
    result.append(')');
    return result.toString();
  }

} //CalcImpl
